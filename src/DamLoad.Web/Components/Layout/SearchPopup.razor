@using Radzen.Blazor.Rendering


<style type="text/css">
    .my-popup {
        display: none;
        position: absolute;
        overflow: hidden;
        height: 360px;
        width: 600px;
        border: var(--rz-panel-border);
        background-color: var(--rz-panel-background-color);
        box-shadow: var(--rz-panel-shadow);
        border-radius: var(--rz-border-radius)
    }
</style>


<RadzenButton @ref=button Variant="Variant.Text" Icon="search" Click="@(args => popup.ToggleAsync(button.Element))" />


<Popup @ref=popup Lazy=true class="my-popup">
    <RadzenStack Orientation="Orientation.Vertical" Gap="1rem" class="rz-h-100 rz-p-4">
        <RadzenTextBox id="search" Placeholder="Type to search..."  Value="@searchString" />
        Body
    </RadzenStack>
</Popup>

@code {
    RadzenButton button;
    Popup popup;
    int? orderId;
    string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

       
    }


}